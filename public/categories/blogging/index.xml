<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogging on MADS Ninja</title>
    <link>http://mads.ninja/categories/blogging/</link>
    <description>Recent content in Blogging on MADS Ninja</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Jul 2015 16:30:53 +0000</lastBuildDate>
    <atom:link href="http://mads.ninja/categories/blogging/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using Hugo</title>
      <link>http://mads.ninja/post/using-hugo/</link>
      <pubDate>Sun, 12 Jul 2015 16:30:53 +0000</pubDate>
      
      <guid>http://mads.ninja/post/using-hugo/</guid>
      <description>&lt;p&gt;##Background
This is my first post written on my new, &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo-powered&lt;/a&gt; site. I had previously been using &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; for my blogging, but I decided before I got &lt;em&gt;too&lt;/em&gt; into things that I should consider switching to something else. The main reason for me was some concern around performance. I chose Jekyll not really realizing that there were competitors in the static-HTML-generation game. I knew that Jekyll was used for &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;, and I just assumed that was what got used everywhere.&lt;/p&gt;

&lt;p&gt;Then I happened to see an article on using &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VSCode&lt;/a&gt; to generate a Hugo site. Having never heard of Hugo, I dug into it a little and discovered that it&amp;rsquo;s basically a Jekyll competitor written in Go rather than Ruby. This offers some advantages, the biggest of which is that it&amp;rsquo;s a &lt;strong&gt;lot&lt;/strong&gt; faster. While I love Ruby &amp;ndash; I think it&amp;rsquo;s one of the most enjoyable programming languages to write in &amp;ndash; it&amp;rsquo;s hard to deny that there can be some performance issues with large projects&amp;hellip; just launch &lt;a href=&#34;http://www.metasploit.com/&#34;&gt;Metasploit&lt;/a&gt; and see how the wait time is.&lt;/p&gt;

&lt;p&gt;I did a bit of hunting to see what &lt;em&gt;else&lt;/em&gt; was out there on top of Jekyll and Hugo. It turns out there are &lt;a href=&#34;http://www.sitepoint.com/6-static-blog-generators-arent-jekyll/&#34;&gt;quite a few options&lt;/a&gt;. Looking into it, though, Hugo seems to be one most focused on performance. A few people with more dedication than me have done some &lt;a href=&#34;http://fredrikloch.me/post/2014-08-12-Jekyll-and-its-alternatives-from-a-site-generation-point-of-view/&#34;&gt;fairly exhaustive testing&lt;/a&gt; to confirm that while Jekyll may eventually start to lag with regard to build times for a site, Hugo crushes it&amp;hellip; though newer versions are slightly slower than the old ones. As someone who can potentially blog quite frequently I didn&amp;rsquo;t want to invest too much of my time and effort into a Jekyll site only to struggle with migrating the content to something else later on if I started to see performance issues.&lt;/p&gt;

&lt;p&gt;##Implementation
Using Hugo was fairly straightforward. I already had a server running Nginx that I wanted to use, so I just had to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;download the binaries for Hugo&lt;/a&gt;. I placed them in my &lt;code&gt;PATH&lt;/code&gt; for the sake of sanity. I&amp;rsquo;ll just have to keep an eye on their releases on GitHub to see when there are updates. Building a new Hugo site is stupidly easy. I just created a directory where I wanted to store everything and then used the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gave me the skeleton struction that I needed. Next up, I wanted to get a theme rolling. After looking through the available themes, I settled on &lt;a href=&#34;https://github.com/zyro/hyde-x&#34;&gt;Hyde-x&lt;/a&gt;. The README for it was awesome enough to give a very thorough rundown of what options are available for my &lt;code&gt;config.toml&lt;/code&gt; file, so I leveraged that template to fill out my own information. I thought the MD5 hash of my Gravatar email address to import my avatars from there was a neat touch. Adding a new post was also a simple matter by running the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new post/test.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates a brand new post Markdown file for me, complete with the skeleton structure of the front matter that I needed. After fiddling with it, I was able to build my site with a test post:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That publishes all of the content to the &lt;strong&gt;public&lt;/strong&gt; folder. I actually don&amp;rsquo;t need it there since I&amp;rsquo;m not going to use Hugo as the web server; that&amp;rsquo;s what Nginx is for. So I just copied the contents of &lt;strong&gt;public&lt;/strong&gt; to where my Nginx instance is reading from. I saw that there&amp;rsquo;s a &lt;code&gt;destination&lt;/code&gt; parameter in the &lt;a href=&#34;http://gohugo.io/overview/configuration/&#34;&gt;configuration options&lt;/a&gt;, so I don&amp;rsquo;t necessarily need to worry about that step going forward. I&amp;rsquo;ve been having difficulty getting it to work properly, though, as everything continues to get pushed to my &lt;strong&gt;public&lt;/strong&gt; folder. I&amp;rsquo;ll need to do some additional research to see if I&amp;rsquo;m not understanding it properly. If nothing else, though, this gives me the option of previewing new content by serving it up via Hugo before pushing it to Nginx.&lt;/p&gt;

&lt;p&gt;Having successfully published a post, I wanted to migrate just a couple of my old Jekyll posts over. That basically only involved changing the front matter format since I wanted to use TOML rather than YAML. After reconciling that, though, everything rebuilt without any issues. Long live Hugo!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>